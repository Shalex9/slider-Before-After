jQuery(document).ready(function(e){function s(e,s,t){e.on("mousedown vmousedown",function(o){e.addClass("draggable"),s.addClass("resizable");var n=e.outerWidth(),r=e.offset().left+n-o.pageX,l=t.offset().left,u=t.outerWidth(),c=l+10,d=l+u-n-10;e.parents().on("mousemove vmousemove",function(e){a||(a=!0,window.requestAnimationFrame?requestAnimationFrame(function(){i(e,r,n,c,d,l,u,s)}):setTimeout(function(){i(e,r,n,c,d,l,u,s)},100))}).on("mouseup vmouseup",function(i){e.removeClass("draggable"),s.removeClass("resizable")}),o.preventDefault()}).on("mouseup vmouseup",function(i){e.removeClass("draggable"),s.removeClass("resizable")})}function i(s,i,t,o,n,r,l,u){var c=s.pageX+i-t;c<o?c=o:c>n&&(c=n);var d=100*(c+t/2-r)/l+"%";e(".draggable").css("left",d).on("mouseup vmouseup",function(){e(this).removeClass("draggable"),u.removeClass("resizable")}),e(".resizable").css("width",d),a=!1}var a=!1,t=!1,o=e(".container-preview");!function(s){s.each(function(){var s=e(this);e(window).scrollTop()+.5*e(window).height()>s.offset().top&&s.addClass("is-visible")}),t=!1}(o),o.each(function(){var i=e(this);s(i.find(".handle"),i.find(".resize-box"),i)}),e.fn.mySlider=function(s){var s={maxWidth:"275px"};e(".carousel-element img").css({"max-width":s.maxWidth});var i=e(".carousel-arrive-left"),a=e(".carousel-arrive-right"),t=e(".carousel-list"),o=0,n=t.find("li").length,r=-306*(n-4);return i.click(function(){0!=o&&(o+=306,t.animate({left:o+"px"},500))}),a.click(function(){o!=r&&(o-=306,t.animate({left:o+"px"},500))}),this},e(".slider").mySlider(),e(".to-preview").click(function(){var s=e(this).attr("src");e(this).parent().css("border","3px solid #9adb4d"),e(this).parent().siblings().css("border","3px solid transparent"),e(".before-img, .after-img").css({backgroundImage:'url("'+s+'")'})}),e(".tool").click(function(){e(this).toggleClass("active"),e(this).siblings().hasClass("active")&&e(this).siblings().removeClass("active")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
